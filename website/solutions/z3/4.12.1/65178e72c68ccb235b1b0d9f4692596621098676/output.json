{"output":"sat\n(\n  (define-fun e () Int\n    3)\n  (define-fun B ((x!0 Int)) Bool\n    (or (and (not (= x!0 1)) (not (= x!0 3)) (not (= x!0 0)))\n        (and (not (= x!0 1)) (= x!0 3))\n        (and (not (= x!0 1)) (not (= x!0 3)) (= x!0 0))\n        (= x!0 1)))\n  (define-fun A ((x!0 Int)) Bool\n    false)\n  (define-fun C ((x!0 Int)) Bool\n    (or (and (not (= x!0 1)) (not (= x!0 3)) (not (= x!0 0)))\n        (and (not (= x!0 1)) (= x!0 3))\n        (and (not (= x!0 1)) (not (= x!0 3)) (= x!0 0))\n        (= x!0 1)))\n  (define-fun D ((x!0 Int)) Bool\n    (ite (= x!0 3) true\n    (ite (= x!0 0) true\n    (ite (= x!0 1) true\n    (ite (= x!0 2) true\n      (C x!0))))))\n)\nIs e an element of D?\ntrue\nNow proving that A is a strict subset of D\nunsat\n","error":"","status":"z3-ran","hash":"65178e72c68ccb235b1b0d9f4692596621098676"}
